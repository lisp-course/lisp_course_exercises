# Request

# Some constants to fill the field operation
uint8 UNDEFINED=0

# Add a new body to the world. If a body with the same name is already present, 
# an error will be thrown.
uint8 ADD=1

# Remove a body from the world. If no body with that name exists, an error will
# be thrown.
uint8 REMOVE=2

# Alter the properties of an existing world body. If no body with that name exists,
# an error will be thrown.
uint8 ALTER=3

# Remove all known bodies from the world. The robot will remain. This operation ignores
# the world body specified in the body field of the request.
uint8 REMOVE_ALL=4

# detach object from robot and spawn it into the world.
# everything but the name in body is being ignored
uint8 DETACH=5

# Type of operation that shall be performed on the world representation
uint8 operation

# Description of the body that shall be added to/removed from/altered within the world.
giskard_msgs/WorldBody body

# Flag that specifies whether the body shall be rigidly attached to an existing 
# link of the robot
bool rigidly_attached

# Pose of the body in the world. TF will be used to resolve the header information.
# Note: If the body shall be rigidly attached to the robot, then the frame_id from 
# the header of this PoseStampled must be the name of a link of the robot. 
geometry_msgs/PoseStamped pose
---
# Response

# constants to use as error codes
uint8 SUCCESS=0
uint8 MISSING_BODY_ERROR=1
uint8 DUPLICATE_BODY_ERROR=2
uint8 CORRUPT_SHAPE_ERROR=3
uint8 CORRUPT_MESH_ERROR=4
uint8 CORRUPT_URDF_ERROR=5
uint8 TF_ERROR=6
uint8 MISSING_LINK_ERROR=7
uint8 INVALID_OPERATION=8
uint8 UNSUPPORTED_OPTIONS=9

# errors that occured during the service
uint8 error_codes

# optional additional error message
string error_msg
